C51 COMPILER V9.00   LPC2478_LCD                                                           04/19/2011 22:55:10 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LPC2478_LCD
OBJECT MODULE PLACED IN lpc2478_lcd.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE lpc2478_lcd.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**
   2           * @file   lpc2478_lcd.c
   3           * @author fanghuaqi <578567190@qq.com>
   4           * @date   Sun Apr 10 20:44:12 2011
   5           * 
   6           * @brief  lm6800 lcd driver for lpc2478
   7           * 
   8           * 
   9           */
  10          
  11          #include "lpc2478_lcd.h"
  12          
  13          uint16_t gl_curRow = 0;
  14          uint16_t gl_curCol = 0;
  15          
  16          /** 
  17           * 
  18           * 
  19           * 
  20           * @return 
  21           */
  22          ERCD LCD_Init(void)
  23          {
  24   1          uint8_t i ;
  25   1          LCD_RST_LOW();                  /*RST must keep low at least 1us then go high*/
  26   1          Delay(100);
  27   1          LCD_RST_HIGH();
  28   1          Delay(10);
  29   1          for (i = 0; i < 4; i++){
  30   2              LCD_Chip_Select(i);
  31   2              LCD_Write_CMD(LCD_DISPLAY_ON);/*Display on*/
  32   2              LCD_Write_CMD(LCD_DISPLAY_START_ADDR|0x0);/*display startline register 0*/
  33   2          }
  34   1          return ERCD_OK;
  35   1      }
  36          /** 
  37           * 
  38           * 
  39           * @param cmdcode 
  40           * 
  41           * @return 
  42           */
  43          ERCD LCD_Write_CMD(uint8_t cmdcode)
  44          {
  45   1          while(LCD_Read_Status() & 0x90);
  46   1              
  47   1              LCD_RS_LOW();                   /*when RS=0 R/W=0,cmd write the data bus*/
  48   1          LCD_R_W_LOW();
  49   1          LCD_OUT_DATA(cmdcode);          /*output cmd  on the bus*/
  50   1          LCD_E_HIGH_LOW();               /*when E high->low data appear on the bus*/
  51   1              _nop_();
  52   1              _nop_();
  53   1              _nop_();
  54   1          return ERCD_OK;
  55   1      }
C51 COMPILER V9.00   LPC2478_LCD                                                           04/19/2011 22:55:10 PAGE 2   

  56          /** 
  57           * 
  58           * 
  59           * @param char_data 
  60           * 
  61           * @return 
  62           */
  63          ERCD LCD_Write_Char(uint8_t char_data)
  64          {
  65   1          while(LCD_Read_Status() & 0x90);
  66   1              //LCD_E_LOW();
  67   1              LCD_RS_HIGH();                  /*when RS=1 R/W=0,cmd write the data bus*/
  68   1          LCD_R_W_LOW();
  69   1          LCD_OUT_DATA(char_data);        /*output data on the bus*/
  70   1          LCD_E_HIGH_LOW();               /*when E high->low(falling edge) data appear on the bus*/
  71   1              _nop_();
  72   1              _nop_();
  73   1              _nop_();
  74   1          return ERCD_OK;
  75   1      }
  76          /** 
  77           * 
  78           * 
  79           * 
  80           * @return 
  81           */
  82          uint8_t LCD_Read_Char(void)
  83          {
  84   1          uint8_t data_read;
  85   1          while(LCD_Read_Status() & 0x90);
  86   1          /*when read data ,a dummy read is needed*/
  87   1          LCD_RS_HIGH();                   /*when RS=1 R/W=1,read data from the displayram*/
  88   1          LCD_R_W_HIGH();
  89   1              LCD_E_HIGH();                    /*when E=1 and device is selected data appear*/
  90   1          data_read = LCD_IN_DATA();       /*in data on the bus*/
  91   1          LCD_E_LOW(); 
  92   1              _nop_();
  93   1              _nop_();
  94   1              _nop_();
  95   1          return data_read;                            /*must pull low here*/
  96   1      }
  97          /** 
  98           * 
  99           * 
 100           * 
 101           * @return 
 102           */
 103          uint8_t LCD_Read_Status(void)
 104          {
 105   1          uint8_t status;
 106   1          /*when read status ,a dummy read is not needed*/
 107   1              LCD_OUT_DATA(0x00);
 108   1              _nop_();
 109   1              _nop_();
 110   1          LCD_RS_LOW();                  /*when RS=0 R/W=1,read status ofthe l*/
 111   1          LCD_R_W_HIGH();
 112   1              LCD_E_HIGH();                   /*when E=1 and device is selecte dat ppear*/
 113   1          status= LCD_IN_DATA();         /*n data on the bus*/    
 114   1              LCD_E_LOW();                            /*must pull low here*/
 115   1          return status;
 116   1      }
 117          /** 
C51 COMPILER V9.00   LPC2478_LCD                                                           04/19/2011 22:55:10 PAGE 3   

 118            
 119            * 
 120            * param cipsel 
 121            * 
 122            * @return 
 123            */
 124          ERCD LCD_Chip_Select(uint8_t chipsel)
 125          {
 126   1          if (chipsel > 3){
 127   2              return ERCD_ARG_ERR;
 128   2          }
 129   1              //LCD_CHIP_SEL_OUTPUT();
 130   1              //Delay(1);
 131   1          switch (chipsel){
 132   2              case 0:
 133   2                  LCD_CHIP_SEL_0();
 134   2                  break;
 135   2              case 1:
 136   2                  LCD_CHIP_SEL_1();
 137   2                  break;
 138   2              case 2:
 139   2                  LCD_CHIP_SEL_2();
 140   2                  break;
 141   2              case 3:
 142   2                  LCD_CHIP_SEL_3();
 143   2                  break;
 144   2              default:
 145   2                  break;
 146   2          }
 147   1              //Delay(1);
 148   1              _nop_();
 149   1              _nop_();
 150   1              _nop_();
 151   1          return ERCD_OK;
 152   1      }
 153          /* 
 154          * 
 155          * 
 156          * @ara row 
 157           * @param col 
 158           * 
 159           * @return 
 160           */
 161          ERCD LCD_Locate(uint16_t row, uint16_t col)
 162          {
 163   1          uint8_t chipsel = 0;
 164   1              gl_curRow = row;
 165   1              gl_curCol = col;
 166   1          if ( (col < LCD_COLS) && (row < LCD_ROWS) ){ /*check if the row and col is over range */
 167   2              chipsel = col / LCD_CHIP_WIDTH;
 168   2              LCD_Chip_Select(chipsel);
 169   2          } else {
 170   2              return ERCD_ARG_ERR;
 171   2          }
 172   1          LCD_Write_CMD(LCD_SET_X_ADDRESS|(row>>3)); /*Page address*/
 173   1          LCD_Write_CMD(LCD_SET_Y_ADDRESS|(col%LCD_CHIP_WIDTH));
 174   1          return ERCD_OK;
 175   1      }
 176          
 177          
 178          /*-----------------------------------------------------------------------*/
 179          /* Put a character                                                       */
C51 COMPILER V9.00   LPC2478_LCD                                                           04/19/2011 22:55:10 PAGE 4   

 180          /*-----------------------------------------------------------------------*/
 181          
 182          
 183          
 184          ERCD LCD_PutDot(uint16_t row, uint16_t col, uint8_t dot_state)
 185          {
 186   1              
 187   1              uint8_t ram;
 188   1              LCD_Write_CMD(LCD_DISPLAY_ON);
 189   1              LCD_Locate(row,col);
 190   1              ram = LCD_Read_Char();
 191   1              ram = LCD_Read_Char();
 192   1              ram = (ram & (~(1<<(row%8))) & 0xff) | (dot_state<<(row%8));
 193   1              LCD_Locate(row,col);
 194   1          LCD_Write_Char(ram);
 195   1          return ERCD_OK;
 196   1      }
 197          
 198          ERCD LCD_ClrScreen(void)
 199          {
 200   1              uint16_t i ,j, k;
 201   1              for(k=0;k<4;k++)
 202   1              {
 203   2                      LCD_Chip_Select(k);
 204   2                      for(j=0;j<8;j++)
 205   2                      {
 206   3                              LCD_Write_CMD(LCD_SET_X_ADDRESS|j);
 207   3                              LCD_Write_CMD(LCD_SET_Y_ADDRESS);
 208   3                              for(i=0;i<64;i++)
 209   3                                      LCD_Write_Char(0x00);
 210   3                      }
 211   2              }
 212   1              LCD_Locate(0,0);
 213   1              return ERCD_OK;
 214   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    463    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
